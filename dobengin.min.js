class dobEngin{constructor(){this.config={};this.objects=[];this.objectsTypes={};this.isStarted=false;this.width=640;this.height=480;this.updatesLastSecond=0;this.fps=60;this.assets=[];this.assetsForUse={};this.gameDiv=document.createElement("div");this.gameDiv.id="game";this.nextDuid=0;this.camera={x:this.width/2,y:this.height/2,height:this.height,width:this.width,follow:"nothing"};this.animations={};this.start=()=>{if(!this.isStarted){this.canvas=document.createElement("canvas");this.canvas.height=this.height;this.canvas.width=this.width;this.drw=this.canvas.getContext("2d");document.body.append(this.gameDiv);this.gameDiv.appendChild(this.canvas);this.isStarted=true;}};this.placeAssetsImgs=()=>{this.assets.forEach(el=>{let obj=new Image();obj.src=el;this.assetsForUse[obj.src.match(/\w+.png|\w+.gif/ig)]=obj;})};this.startGameLoop=()=>{clearInterval(this.updateInterval);this.updateInterval=setInterval(()=>{this.drw.clearRect(0,0,this.width,this.height);this.gameLoop();this.fps++;},1000/this.fps);this.fpsCounter = setInterval(()=>{this.fps = 0;},1000)};this.gameLoop=()=>{};this.sprite=class sprite{constructor(props,engine){this.getSprite=(spr)=>{if(typeof(spr)=="string"){return engine.assetsForUse[spr]}else{return spr}};this.getAnimByName=(anim)=>{this.props.animations[anim]=engine.animations[anim]||null};this.propsDef = {name:props[0],x:props[1],y:props[2],spriteImage:this.getSprite(props[3]),width:props[4]||100,height:props[5]||100,animations:{}};this.curAnim={animName:"",curFrame:0,state:"nothing",speed:5,cycle:0};this.pause=()=>{clearInterval(this.animInterval);this.curAnim.state = "paused"};this.stop=()=>{clearInterval(this.animInterval);this.curAnim.curFrame = 0;this.curAnim.state = "stopped"};this.resume=()=>{this.play(this.curAnim.animName,this.curAnim.speed,this.curAnim.curFrame,this.curAnim.cycle)};this.play=(anim,speed=5,start=0,cycle=true)=>{this.pause();const anim=this.props.animations[anim];this.props.spriteImage=animation.animArr[0];this.curAnim.speed=speed;this.curAnim.animName=anim;this.curAnim.cycle=cycle;this.curAnim.state="running";if(start>anim.animArr.length-1){start=animation.animArr.length-2};this.curAnim.curFrame=start||0;let frameSpeed=1000/speed;this.animInterval=setInterval(()=>{this.props.spriteImage = anim.animArr[this.curAnim.curFrame];if(this.curAnim.curFrame==anim.animArr.length-1&&cycle==false){clearInterval(this.animInterval)};if(this.curAnim.curFrame==animation.animArr.length-1&&cycle==true)this.curAnim.curFrame=0;else this.curAnim.curFrame++},frameSpeed)};this.objectType = this.propsDef.name;this.isCreated = true;this.props={"name":props[0],"x":props[1],"y":props[2],"spriteImage":this.getSprite(props[3]),"width":props[4]||100,"height":props[5]||100,"animations":{}};this.type="sprite";this.dUid=0;this.setProps=(props)=>{for(let i=0;i<this.props.length;i++){if(props[i]!==undefined){this.props[Object.keys(this.props)[i]]=props[i]}}}}};this.text=class text{constructor(props,engine){this.propsDef={name:props[0]||"def_text",x:props[1]||0,y:props[2]||0,text:props[3]||"default text"};this.isCreated=true;this.objectType=this.propsDef.name;this.props={name:properties[0]||"def_text",x:props[1]||0,y:props[2]||0,text:props[3]||"default text"};this.type="text";this.dUid=0;this.setProps=(props)=>{for(let i=0;i<this.props.length;i++){if(props[i]!==undefined){this.props[Object.keys(this.props)[i]]=props[i]}}};this.typeInterval = 0;this.typewriter=(txt="",lngth=0)=>{let oneSymTime=lngth/txt.length;let curSym=0;this.props.text="";txt=txt.toString();if(length=0){this.props.text=txt;return}if(txt.length<=0){this.props.text="";return;}if(this.typeInterval){clearInterval(this.typeInterval)};this.typeInterval=setInterval(()=>{this.props.text+=txt[curSym];if(curSym==txt.length-1){clearInterval(this.typeInterval)};curSym++},oneSymTime*1000)}}};this.createObjectType=(type,name,...props)=>{if(type=="sprite"){this.objectsTypes[name]=new this.sprite(props,this)}else if(type=="text"){this.objectsTypes[name]=new this.text(props,this)}};this.dUid=()=>{return this.nextDuid++};this.spawnObject=(type,...props)=>{let newObj;let typeDefProps=this.objectsTypes[type].props,objectType=this.objectsTypes[type].objectType;if(this.objectsTypes[type]!=undefined){newObj=new this.objectsTypes[type].constructor(props,this);newObj.dUid=this.dUid();newObj.propsDef=typeDefProps;newObj.objectType=objectType;if(newObj.type=="sprite"){newObj.props.animations=typeDefProps.animations;this.objects.push(newObj);}}};this.destroyObject=(dUid)=>{let found=false;this.objects.forEach(el=>{if(el.dUid==dUid){delete this.objects[this.objects.indexOf(el)];found=true;}});let newObjs=[];this.objects.forEach(el=>{if(typeof(el)!="undefined"){newObjs.push(el)}});this.objects=newObjs;return found==0?false:true};this.downloadString=(string,mime,name)=>{const a = document.createElement("a");a.href="data:"+(mime||"text/plain")+","+string;a.setAttribute("download",name||"");a.click();return a.href};this.setCameraCoords=(x,y)=>{if(typeof(x)=="number"&&typeof(y)=="number"){this.camera.x=x;this.camera.y=y;}};this.renderCamera=(objFollow)=>{this.setCameraCoords(objFollow.props.x,objFollow.props.y);this.objects.forEach(el=>{if(el.props.x+el.props.width>this.camera.x&&el.props.x<this.camera.x+this.camera.width&&el.props.y+el.props.height>this.camera.y&&el.props.y<this.camera.y+this.camera.height){if(el.type=="sprite"){if(el.dUid==objFollow.dUid){this.drw.drawImage(el.props.spriteImage,this.camera.width/2,this.camera.height/2,el.props.width,el.props.height);}else{this.drw.drawImage(el.props.spriteImage,el.props.x-engin.camera.x,el.props.y-engin.camera.y,el.props.width,el.props.height)}}else if(el.type=="text"){this.drw.fillText(el.props.text,el.props.x-engin.camera.x,el.props.y-engin.camera.y)}}})};this.addAnim=(arr=[],name=Math.round((Math.random()*10)*100)/100,isGif=false)=>{if(!this.isArr(arr)){console.log("not array. Error: STPD ERROR 197");return}arr=arr.reverse();if(arr.length==0){console.error("arr is empty.stopped.STPD ERROR 200");return;}for(let i=0;i<arr.length;i++){if(!this.assetsForUse[arr[i]]){continue};arr[i] = this.assetsForUse[arr[i]];}this.animations[name]={animArr:arr,'isGif':isGif}};this.isArr=arr=>{try{arr.reverse();return true}catch(e){return false}};this.stop=()=>{clearInterval(this.updateInterval);this.isStarted=false};this.resume=()=>{if(!this.isStarted){this.startGameLoop()}};this.setFps=(fps)=>{this.stop();this.fps=fps;this.resume()}}}